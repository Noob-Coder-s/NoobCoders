0. Ремарка. Методы практически 
Структуры данных. Введение

1. Нам уже известны такие типы данных как массивы и строки. Они позволяют нам хранить множество однотипных данных, используя всего одну переменную. Такие типы данных называются структуры данных. Известные нам структуры данных довольно функциональны: мы имеем произвольный доступ к данным, то есть можем получить любое значение в массиве, если знаем его индекс. Мы можем проходить по структуре данных и последовательно работать с данными. В большинстве случаев нам хватает этого функционала, но иногда нам требуется выполнять такие задачи, для которых данные структуры данных просто не подходят, а потому существует альтернативы для них. Давайте разберемся, как работают структуры данных.

(здесь не помешали бы пару слайдов для демонстрации)
2. Вспомним, что такое массив. Массив это набор элементов одного типа, расположенных в памяти ПОСЛЕДОВАТЕЛЬНО(одним бруском). Также говорят, что переменная-массив ссылается на память, выделенную под хранение элементов. Из этого следует следующие вещи: размер "бруска" должен быть указан при создании массива; изменить размер массива нельзя. Если требуется превысить количество элементов, то создаётся новый массив с увеличенным размером, и данные в него копируются. Копирование массива и создание нового массива это очень долгая операция и сейчас мы в этом убедимся. Для того, чтобы избежать излишнего копирования, когда мы хотим добавить много элементов в существующий массив мы можем использовать другую структуру данных, которая называется List или список. 

3. List это все тот же массив, только он умеет увеличивать свой размер при необходимости и умнее, чем делали это мы. Список все также является набором элементов, расположенных в памяти последовательно, одним бруском. Только List умеет занимать больше памяти, чем ему требуется в данный момент. Каждый раз, когда List не хватает места для очередного элемента, который мы хотим добавить в него, он точно также выделяет новую память, копирует в нее элементы из старой памяти и добавляет новый элемент. Только в отличии от нас он выделяет память в 2 раза больше, чем была старая память. Это означает, что выделять новую память придется гораздо реже, а значит копировать данные придется тоже реже. 

4. Максимальный объем памяти называется емкостью, тогда как количество занятых ячеек называется размер списка. Давайте перейдем к практике и также сравним список и массив. Для того, чтобы использовать класс List нам необходимо подключить пространство имен. Не в даваясь в подробности пространство имен это библиотека, в которой определены необходимые нам классы и многое другое. 
using System.Collections.Generic; (дальше разобрать все что происходит в блоке синтаксис списка)

5. Разберем разницу между массивом и списком наглядно (запустить код, объяснить что происходит. Объясню при созвоне, текстом сложно описать)